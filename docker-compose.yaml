# Port-layout
# ===========
#
# Rootless podman-compose doesn't allow us to start multiple containers in one
# pod that listen on the same port.  Therefore we start httpd servers on ports
# (host:pod):
#   5000:5000 -- Frontend Apache (API/WebUI)
#   5001:5001 -- DistGit Apache
#   5002:5002 -- Backend Nginx
#     --:5003 -- Keygen Apache (obtaining keys)
#
# Other ports:
#   5009:5432 -- PostgreSQL database

version: '3'
services:

  # @TODO Probably not all backend services should use the same Dockerfile

  backend-log:
    build:
      context: docker/backend
    hostname: backend-log
    command: "/usr/bin/copr_run_logger.py"
    depends_on:
      - redis
    stdin_open: true
    tty: true
    volumes:
      - .:/opt/copr:z
      - results:/var/lib/copr/public_html/results:z

  backend-build:
    build:
      context: docker/backend
    hostname: backend-build
    command: ["/run-backend", "--sign-host", "keygen-signd", "/usr/bin/copr-run-dispatcher-backend", "builds"]
    depends_on:
      - resalloc
    stdin_open: true
    tty: true
    volumes:
      - .:/opt/copr:z
      - results:/var/lib/copr/public_html/results:z

  backend-action:
    build:
      context: docker/backend
    hostname: backend-action
    command: ["/run-backend", "--sign-host", "keygen-signd", "/usr/bin/copr-run-dispatcher-backend", "actions"]
    depends_on:
      - resalloc
    stdin_open: true
    tty: true
    volumes:
      - .:/opt/copr:z
      - results:/var/lib/copr/public_html/results:z

  resalloc:
    build:
      context: docker/resalloc
    hostname: resalloc
    depends_on:
      - database
    command: /usr/bin/resalloc-server
    stdin_open: true
    tty: true

  redis:
    image: centos/redis-32-centos7
    hostname: redis
    volumes:
      - redis:/var/lib/redis/data

  backend_httpd:
    build:
      context: docker/backend_httpd
    hostname: backend_httpd
    ports:
      - "5002:5002"
    volumes:
      - results:/var/lib/copr/public_html/results:z

  builder:
    build:
      context: docker/builder
    hostname: builder
    stdin_open: true
    tty: true
    privileged: true
    volumes:
      - .:/opt/copr:z

  frontend:
    build:
      context: docker/frontend/
    hostname: frontend
    depends_on:
      - database
      - redis
    links:
      - database
    stdin_open: true
    tty: true
    ports:
      - "5000:5000"
    volumes:
      - .:/opt/copr:z

  database:
    build:
      context: docker/database/
    hostname: database
    stdin_open: true
    tty: true
    environment:
      - POSTGRESQL_USER=copr-fe
      - POSTGRESQL_PASSWORD=coprpass
      - POSTGRESQL_DATABASE=coprdb
    ports:
      - 5009:5432
    volumes:
      - database:/var/lib/pgsql/data

  distgit:
    build:
      context: docker/distgit/
    hostname: distgit
    stdin_open: true
    tty: true
    volumes:
      - .:/opt/copr:z
      - dist-git:/var/lib/dist-git:z

  distgit-httpd:
    build:
      context: docker/distgit/
    hostname: distgit-httpd
    stdin_open: true
    tty: true
    ports:
      - "5001:5001"
    volumes:
      - .:/opt/copr:z
      - dist-git:/var/lib/dist-git:z
    command: /usr/sbin/httpd -DFOREGROUND

  keygen-signd:
    build:
      context: docker/keygen/
    hostname: keygen-signd
    stdin_open: true
    tty: true
    volumes:
      - .:/opt/copr:z
      - copr-keygen:/var/lib/copr-keygen:z
    command: /signd-entrypoint

  keygen-httpd:
    build:
      context: docker/keygen/
    hostname: keygen-httpd
    stdin_open: true
    tty: true
    volumes:
      - .:/opt/copr:z
      - copr-keygen:/var/lib/copr-keygen:z

volumes:
  results:
  copr-keygen:
  dist-git:
  database:
  redis:
