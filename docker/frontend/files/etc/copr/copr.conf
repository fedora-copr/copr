# Purpose of this instance
# Use "production", "devel", "local" or "test"
ENV="local"

# Directory and files where is stored Copr database files
#DATA_DIR = '/var/lib/copr/data'
#DATABASE = '/var/lib/copr/data/copr.db'
#OPENID_STORE = '/var/lib/copr/data/openid_store'
#WHOOSHEE_DIR = '/var/lib/copr/data/whooshee'

# salt for CSRF codes
#SECRET_KEY = 'put_some_secret_here'

BACKEND_PASSWORD = '1234'

# restrict access to a set of users
#USE_ALLOWED_USERS = False
#ALLOWED_USERS = ['bonnie', 'clyde']

SQLALCHEMY_DATABASE_URI = 'postgresql+psycopg2://copr-fe:coprpass@database/coprdb'

# Token length, defaults to 30 (max 255)
#API_TOKEN_LENGTH = 30

# Expiration of API token in days
#API_TOKEN_EXPIRATION = 180

# logging options
#SEND_LOGS_TO = ['root@localhost']
#LOGGING_LEVEL = logging.ERROR

# where to send notice about raised legal flag
#SEND_LEGAL_TO = ['root@localhost', 'somebody@somewhere.com']

# DEBUG = False
DEBUG = True
SQLALCHEMY_ECHO = False

#CSRF_ENABLED = True
# as of Flask-WTF 0.9+
#WTF_CSRF_ENABLED = True

# send emails when user's perms change in project?
SEND_EMAILS = False

## post-process url leading to backend
## possible options: None, "http", "https"
# ENFORCE_PROTOCOL_FOR_BACKEND_URL = "https"
## post-process url leading to frontend
# ENFORCE_PROTOCOL_FOR_FRONTEND_URL = "https"

# URLs for fedmenu resources
#FEDMENU_URL = "http://threebean.org/fedmenu/"
#FEDMENU_DATA_URL = "http://threebean.org/fedmenu/dev-data.js"
#or
#FEDMENU_URL = "https://apps.fedoraproject.org/fedmenu/"
#FEDMENU_DATA_URL = "https://apps.fedoraproject.org/js/data.js"

PUBLIC_COPR_HOSTNAME = 'localhost:5000'
PUBLIC_COPR_BASE_URL = 'http://frontend:5000'

BACKEND_BASE_URL = 'http://backend_httpd:5002'
DIST_GIT_CLONE_URL = 'http://distgit-httpd:5001/git/'
DIST_GIT_URL = 'http://localhost:5001/cgit'
COPR_DIST_GIT_LOGS_URL = 'http://localhost:5001/per-task-logs'

# primary
LOG_FILENAME = "/var/log/copr-frontend/frontend.log"
LOG_DIR = "/var/log/copr-frontend/"

# Internal network, used to accept statistics without auth
# list of IP or subnet
INTRANET_IPS = ["127.0.0.1", "192.168.1.0/24"]

# Builder VMs network, used to avoid requests from builders in popularity statistics
# list of IP or subnet, optional
BUILDER_IPS = ["127.0.0.1"]

# a place for storing srpms until they get uploaded
STORAGE_DIR = "/var/lib/copr/data/srpm_storage"

# no need to filter cla_* groups, they are already filtered by fedora openid
GROUP_DENYLIST = ['fedorabugs', 'packager', 'provenpackager']

REDIS_HOST = "redis"
REDIS_PORT = 6379

# Hide page parts not relevant to this Copr instance:
# LAYOUT_OVERVIEW_HIDE_QUICK_ENABLE = False

# FAS_LOGIN = True
# LOGIN_INFO = {
#   # Link to user's profile, {username} expaneded.
#   'user_link': 'https://accounts.fedoraproject.org/user/{username}/',
#   # Description sometimes put into template to make clear what we point to
#   'user_desc': 'FAS account'
# }


NEWS_URL = "https://fedora-copr.github.io/"
NEWS_FEED_URL = "https://fedora-copr.github.io/feed.xml"

OPENID_PROVIDER_URL = "https://id.fedoraproject.org"

# When the data in EOL chroots should be deleted (in days)
DELETE_EOL_CHROOTS_AFTER = 180

# This option has several meanings:
# - How often we warn about the EOL chroots be e-mail;  Ie. we send the first
#   email on the day when we mark some of the mock_chroots EOL, and the next
#   emails are sent with EOL_CHROOTS_NOTIFICATION_PERIOD.
# - We start showing a flash message in web-UI warning about EOL chroot removal
#   if some of the chroots is to be removed in the next
#   EOL_CHROOTS_NOTIFICATION_PERIOD days.
# - the /repositories pages highlight the chroots to be removed in the next
#   EOL_CHROOTS_NOTIFICATION_PERIOD days
EOL_CHROOTS_NOTIFICATION_PERIOD = 80

# enable Discourse integration
ENABLE_DISCUSSION = False
# DISCOURSE_URL = "https://discussion.fedoraproject.org/"

# PAGINATION
ITEMS_PER_PAGE = 10
PAGES_URLS_COUNT = 5

# Builds defaults
# # memory in MB
DEFAULT_BUILD_MEMORY = 2048
MIN_BUILD_MEMORY = 2048
MAX_BUILD_MEMORY = 4096
# in seconds
DEFAULT_BUILD_TIMEOUT = 3600 * 5
MIN_BUILD_TIMEOUT = 0
MAX_BUILD_TIMEOUT = 108000

# Disable template caching
CACHE_TYPE = "NullCache"

USAGE_TREEMAP_TEAMS = {
    "CPT": ["@copr", "@mock", "msuchy", "praiskup", "frostyx", "nikromen"],
    "Packit": ["packit", "packit-stg", "ttomecek"],
    "Python": ["@python", "thrnciar"],
}

# These entries are common OIDC configs
# The OIDC_LOGIN and OIDC_PROVIDER_NAME should be present when OpenID Connect is enabled
# OIDC_LOGIN = False
# OIDC_PROVIDER_NAME = "" # e.g "openEuler ID"
# OIDC_CLIENT = ""
# OIDC_SECRET = ""
# OIDC_SCOPES = "" # e.g. "openid username profile email"
# OIDC_TOKEN_AUTH_METHOD="client_secret_post" # possible: client_secret_post, client_secret_basic, none

# We have supported two types of OIDC client register
# 1. dynamic register
# 2. static register
# For dynamic register: the OIDC_METADATA was used and only needed by dynamic provider register
# OIDC_METADATA = "" # such as "https://accounts.google.com/.well-known/openid-configuration"

# For static client register: you should config all items blow:
# OIDC_AUTH_URL=""
# OIDC_TOKEN_URL=""
# OIDC_USERINFO_URL=""
